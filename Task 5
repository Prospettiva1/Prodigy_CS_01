from scapy.all import *

# Callback function to process packets
def packet_callback(packet):
    # Check if the packet has IP layer
    if packet.haslayer(IP):
        ip_src = packet[IP].src
        ip_dst = packet[IP].dst
        protocol = packet[IP].proto

        # Protocol lookup
        if protocol == 6:
            protocol_name = "TCP"
        elif protocol == 17:
            protocol_name = "UDP"
        else:
            protocol_name = "Other"

        print(f"Source IP: {ip_src}")
        print(f"Destination IP: {ip_dst}")
        print(f"Protocol: {protocol_name}")
        
        # Print payload if available
        if packet.haslayer(Raw):
            payload = packet[Raw].load
            print(f"Payload: {payload}")
        
        print("-" * 40)

# Start sniffing
print("Starting packet capture...")
sniff(prn=packet_callback, store=0)
